all-tests:	test-bugs	\
		test-conf	\
		test-alias	\
		test-arg	\
		test-arith	\
		test-bltin	\
		test-break	\
		test-cmdsub	\
		test-echo	\
		test-errflg	\
		test-error	\
		test-exec	\
		test-exit	\
		test-for	\
		test-getopts	\
		test-glob	\
		test-here	\
		test-ifs	\
		test-local	\
		test-misc	\
		test-parameter	\
		test-pipe	\
		test-printf	\
		test-quoting	\
		test-redir	\
		test-return	\
		test-set	\
		test-syntax	\
		test-test	\
		test-tilde	\
		test-trap
	echo Tests passed.

test-alias:
	[ -d alias ] || exit 0 && cd alias && for i in *.sh; do echo Running test alias/$$i; $(SHELL) $$i; done

test-arg:
	[ -d arg ] || exit 0 && cd arg && for i in *.sh; do echo Running test arg/$$i; $(SHELL) $$i; done

test-arith:
	[ -d arith ] || exit 0 && cd arith && for i in *.sh; do echo Running test arith/$$i; $(SHELL) $$i; done

test-bltin:
	[ -d bltin ] || exit 0 && cd bltin && for i in *.sh; do echo Running test bltin/$$i; $(SHELL) $$i; done

test-break:
	[ -d break ] || exit 0 && cd break && for i in *.sh; do echo Running test break/$$i; $(SHELL) $$i; done

test-bugs:
	[ -d bugs ] || exit 0 && cd bugs && for i in *.sh; do echo Running test bugs/$$i; $(SHELL) $$i; done

test-cmdsub:
	[ -d cmdsub ] || exit 0 && cd cmdsub && for i in *.sh; do echo Running test cmdsub/$$i; $(SHELL) $$i; done

test-conf:
	[ -d conf ] || exit 0 && cd conf && for i in *.sh; do echo Running test conf/$$i; $(SHELL) $$i; done

test-errflg:
	[ -d errflg ] || exit 0 && cd errflg && for i in *.sh; do echo Running test errflg/$$i; $(SHELL) $$i; done

test-echo:
	[ -d echo ] || exit 0 && cd echo && for i in *.sh; do echo Running test echo/$$i; $(SHELL) $$i; done

test-error:
	[ -d error ] || exit 0 && cd error && for i in *.sh; do echo Running test error/$$i; $(SHELL) $$i; done

test-exit:
	[ -d exit ] || exit 0 && cd exit && for i in *.sh; do echo Running test exit/$$i; $(SHELL) $$i; done

test-exec:
	[ -d exec ] || exit 0 && cd exec && for i in *.sh; do echo Running test exec/$$i; $(SHELL) $$i; done

test-for:
	[ -d for ] || exit 0 && cd for && for i in *.sh; do echo Running test for/$$i; $(SHELL) $$i; done

test-getopts:
	[ -d getopts ] || exit 0 && cd getopts && for i in *.sh; do echo Running test getopts/$$i; $(SHELL) $$i; done

test-glob:
	[ -d glob ] || exit 0 && cd glob && for i in *.sh; do echo Running test glob/$$i; $(SHELL) $$i; done

test-here:
	[ -d here ] || exit 0 && cd here && for i in *.sh; do echo Running test here/$$i; $(SHELL) $$i; done

test-ifs:
	[ -d ifs ] || exit 0 && cd ifs && for i in *.sh; do echo Running test ifs/$$i; $(SHELL) $$i; done

test-local:
	[ -d local ] || exit 0 && cd local && for i in *.sh; do echo Running test local/$$i; $(SHELL) $$i; done

test-misc:
	[ -d misc ] || exit 0 && cd misc && for i in *.sh; do echo Running test misc/$$i; $(SHELL) $$i; done

test-parameter:
	[ -d parameter ] || exit 0 && cd parameter && for i in *.sh; do echo Running test parameter/$$i; $(SHELL) $$i; done

test-pipe:
	[ -d pipe ] || exit 0 && cd pipe && for i in *.sh; do echo Running test pipe/$$i; $(SHELL) $$i; done

test-printf:
	[ -d printf ] || exit 0 && cd printf && for i in *.sh; do echo Running test printf/$$i; $(SHELL) $$i; done

test-quoting:
	[ -d quoting ] || exit 0 && cd quoting && for i in *.sh; do echo Running test quoting/$$i; $(SHELL) $$i; done

test-redir:
	[ -d redir ] || exit 0 && cd redir && for i in *.sh; do echo Running test redir/$$i; $(SHELL) $$i; done

test-return:
	[ -d return ] || exit 0 && cd return && for i in *.sh; do echo Running test return/$$i; $(SHELL) $$i; done

test-set:
	[ -d set ] || exit 0 && cd set && for i in *.sh; do echo Running test set/$$i; $(SHELL) $$i; done

test-syntax:
	[ -d syntax ] || exit 0 && cd syntax && for i in *.sh; do echo Running test syntax/$$i; $(SHELL) $$i; done

test-test:
	[ -d test ] || exit 0 && cd test && for i in *.sh; do echo Running test test/$$i; $(SHELL) $$i; done

test-tilde:
	[ -d tilde ] || exit 0 && cd tilde && for i in *.sh; do echo Running test tilde/$$i; $(SHELL) $$i; done

test-trap:
	[ -d trap ] || exit 0 && cd trap && for i in *.sh; do echo Running test trap/$$i; $(SHELL) $$i; done

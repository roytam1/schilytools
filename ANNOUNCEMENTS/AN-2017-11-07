New features with AN-2017-11-07:

This is the first localization step for the schily source consolidation. Many
programs now (hopefully) call gettext() for all strings that need localization.

-	The next step will include dgettext() calls for the libraries and the
	missing programs

-	The following step will include the extracted strings

-	The last step will include German translations and install support
	for the resulting binary message object files.

----------> Please test and report compilation problems! <---------

***** NOTE: As mentioned since 2004, frontends to the tools should *****
*****		call all programs in the "C" locale		   *****
*****		by e.g. calling: LC_ALL=C cdrecord ....		   *****
*****		unless these frontends support localized strings   *****
*****		used by the cdrtools with NLS support.		   *****

		*** WARNING        ***
		*** Need new smake ***

	*** Due to the fact that schily-tools 2014-04-03 introduced to use new macro
	*** expansions and a related bug fix in smake, you need a new smake
	*** to compile this source. To ensure this, call:

	cd ./psmake
	./MAKE-all
	cd ..
	psmake/smake
	psmake/smake install


	WARNING: the new version of the isoinfo program makes use of the 
		*at() series of functions that have been introduced by Sun
		in August 2001 and added to POSIX.1-2008. For older platforms,
		libschily now includes emulations for these functions but
		these emulations have not yet been tested thoroughly.
		Please report problems!

	The new smake version mentioned above is smake-1.2.4

-	include/schily/device.h: XDEV_T is now Ullong. This file was forgotten
	to distribute with schilytools-2017-10-10. The change is however needed
	for a bugfix in "star".

-	libschily/comerr.c: Made Cstyle clean

-	libschily/fstream.c: fsgetc() now allows to return more expeptional
	return values from the transfer callback function. Before, only
	0 and EOF have been supported, now other negative values are OK as well.

-	libshedit: return NULL, in case malloc() failed.

	Thanks to Heiko Eißfeldt for reporting.

-	libshedit & bsh: handle the case when malloc() fails in expand.c

	Thanks to Heiko Eißfeldt for reporting.

-	libshedit: Avoid to call raisecond() from libschily by #defining
	raisecond() to nothing.

-	libshedit & bsh: The history editor no longer dumps core when bsh cannot
	use it's own malloc() or while in libshedit and malloc() returns NULL

	Thanks to Heiko Eißfeldt for reporting.

-	Bourne Shell/bsh/ved: The map files $HOME/.vedmap and $HOME/.bshmap
	may now contain entries like:

		^H::*

	to disable a mapping for backspace. This allows to disable a mapping
	that was introduced from TERMCAP. This feature is e.g. used to disable
	the mapping:

		^H:^?:Key Backspace -> Delete Char

	that is automatically set up by TERMCAP in case that the "kb" capability
	is set for the actual terminal.

-	Bourne Shell and bsh: While reading the file $HOME/.history, the
	timestamp lines from bash are now skipped again. This was commented out
	after reading $HOME/.history has been rewritten in August 2015 to
	enable buffering.

-	Bourne Shell: provide a raisecond() dummy in find.c to avoid to link
	against raisecond() from libschily even though file raising is disabled
	in libfind. So this raisecond() will never be actually called. It just 
	avoids unneeded code when linking statically.

-	Bourne Shell defs.h: Made Cstyle clean

-	p: If an illegal multi byte sequence was observed, p did print '?' two
	times - the first one instead of the previous printable character.

-	bsh: "$@" is now expanded to "nothing" in case that the argument list
	is empty. Before it was expanded to an empty string which may cause
	problems e.g. in parameterized macros.




-	Bourne Shell Missing features for POSIX compliance:

	- Support for $'...' quoting (this is not needed for the current
					version of POSIX but for the next POSIX
					version that will be named SUSv8).
					The development of SUSv8 will start in
					late 2016.

	We are now expecting the Bourne Shell to be fully POSIX compliant.

-	Bourne Shell further TODO list:

	-	Finish loadable builtin support.

	-	POSIX does not allow us to implement ". -h", so we will
		add a "source" builtin to be able to implement "source -h"

-	The following builtins (that are available in bsh) are still missing in
	the Bourne Shell:

	err			echo with output going to stderr
	glob			echo with '\0' instead of ' ' between args
	env			a builtin version of /usr/bin/env

	The following bsh intrinsics are still missing in the Bourne Shell:

	-			the restricted bsh has restriction features that
				are missing in the Bourne shell.

	-	source -h	read file into history but do not execute

	and probably more features not yet identified to be bsh unique.



Author:

Joerg Schilling
D-13353 Berlin
Germany

Email: 	joerg@schily.net, js@cs.tu-berlin.de
	joerg.schilling@fokus.fraunhofer.de

Please mail bugs and suggestions to me.

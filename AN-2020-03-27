New features with AN-2020-03-27:

This is the first localization step for the schily source consolidation. Many
programs now (hopefully) call gettext() for all strings that need localization.

-	The next step will include dgettext() calls for the libraries and the
	missing programs

-	The following step will include the extracted strings

-	The last step will include German translations and install support
	for the resulting binary message object files.

----------> Please test and report compilation problems! <---------

***** NOTE: As mentioned since 2004, frontends to the tools should *****
*****		call all programs in the "C" locale		   *****
*****		by e.g. calling: LC_ALL=C cdrecord ....		   *****
*****		unless these frontends support localized strings   *****
*****		used by the cdrtools with NLS support.		   *****

		*** WARNING        ***
		*** Need new smake ***

	*** Due to the fact that schily-tools 2014-04-03 introduced to use new macro
	*** expansions and a related bug fix in smake, you need a newer smake
	*** to compile this source. If your smake is too old and aborts, ensure to
	*** use the recent smake by calling:

	cd ./psmake
	./MAKE-all
	cd ..
	psmake/smake
	psmake/smake install

	The new smake version mentioned above is smake-1.2.4
	The recent smake version is smake-1.3

	*** Due to the fact that schily-tools 2018-01-26 introduced
	*** optimizations for the Schily version of SunPro Make, you
	*** need at least the dmake version from 2018/01/11 with support
	*** for the "export" directive to compile with this makefile system.


	WARNING: the new version of the isoinfo program makes use of the 
		*at() series of functions that have been introduced by Sun
		in August 2001 and added to POSIX.1-2008. For older platforms,
		libschily now includes emulations for these functions but
		these emulations have not yet been tested thoroughly.
		Please report problems!

	BUG WARNING: Please never report bugs only to Linux distributions as
		they usually do not forward these bug reports upstream and as
		the Linux distributions typically do not let skilled people
		check the bugs. We did not hear about a FIFO problem in star
		for a long time. Then a problem on Linux occurred once
		every 6000-10000 tries but it did not happen on Solaris after
		even 10 million tries, so it was not known besides Linux.

-	SunPro Make: The man page now mentions the file .make.state.lock since
	that file may need manual removal if the system crashes at a bad time.

-	SunPro Make: The file Make/include/mksh/defs.h changed a comment to
	avoid a warning from the IRIX compiler.

-	Bourne Shell: The case statement now supports the alternate end case
	symbol ";;&" that has been introduced by bash. If ";;&" is used instead
	of ";;", the next pattern list is evaluated and if there is a match, 
	the related command list is executed.

-	mkisofs: A new option -noatime has been introduced in order to use the
	modification time of the files instead of the last access time.

	This allows to create reproducible ISO-90660 filesystem images.

-	mkisofs: A new option -creation-date has been introduced in order to
	use the supplied time stamp instead of the current time in the PVD.

	This allows to create reproducible ISO-90660 filesystem images.

-	mkisofs: A new option -effective-date has been introduced in order to
	use the supplied time stamp instead of the current time in the PVD.

	This allows to create reproducible ISO-90660 filesystem images.

-	mkisofs: A new option -expiration-date has been introduced in order to
	use the supplied time stamp instead of a zeroed time in the PVD.

	This allows to create reproducible ISO-90660 filesystem images.

-	mkisofs: The option -modification-date=spec did not work if specified
	as -modification-date=spec, but it worked if specified as
	-modification-date spec. This was caused since it starts with 
	looking for the "-m" option, which is another option that takes a 
	string argument.

	We now moved the -m option past the -modification-date option to
	first look for -modification-date.

-	mkisofs: The "current time" used by mkisofs for various places is
	now derived from the -modification-date argument if present. This
	gives predictable behavior.

-	mkisofs: The time stamp used for the ".rr_moved" directory is now
	derived from the "current time" value that is derived from the
	-modification-date argument if present.

-	mkisofs: The time stamp used for the "invented" directories is now
	derived from the "current time" value that is derived from the
	-modification-date argument if present.

-	mkisofs: The time stamp used for the debug information is now
	derived from the "current time" value that is derived from the
	-modification-date argument if present.

-	mkisofs: If you like to create ISO filesystem images, you should call
	something like:

	mkisofs  -creation-date=202003 -modification-date=202003 \
		-effective-date=202003 -noatime some-dir > image.iso

	Do not use the -o option since the -o argument is recorded inside
	the ISO image.

-	mkisofs: A new option -reproducible-date has been added. This
	option sets -creation-date, -modification-date, -effective-date
	and -noatime at the same time and helps to make usage easier.


-	SCCS TODO:

	-	Convert sccs.c to use -NSCCS in the back end programs instead
		of converting g-file names from the command line into s.file
		names in the frontend in order to forward s.file names to the
		backend programs. Doing it this way allows us to have the SCCS
		history files "off tree" in a separate directory tree starting
		with ".sccs/" at the "project root" directory, as the related
		code to convert path names is in libcomobj::bulkprepare().

	-	Add code to admin(1) and delta(1) to retrieve the list of
		new or modified files in order to have all important code
		for a "sccs commit" in a single program that does not need to
		deal with ARG_MAX limitations.

	-	Add code to admin(1), delta(1) and get(1) to maintain/understand
		the changeset file.

	-	Add code to libcomobj to understand the changeset file,
		which is needed in order to e.g. know the file names and file
		specific SIDs/state that correspond to a project global SID.

	-	Add code to all programs to maintain a lock (for the file
		$PROJECTHOME/.sccs/SCCS/s.changeset, that would be in the file
		$PROJECTHOME/.sccs/SCCS/z.changeset) to maintain a project
		global lock.

	-	Find/verify a complete transactional model that allows to repair
		complex changes to the set of files for a project that have
		been aborted in the middle. The current idea is to create the
		file $PROJECTHOME/.sccs/changeset with the deltas to the
		changeset during a complex update operation.

	-	Find a way to decide when to use SCCS v6 type history files.

		For the project mode, this is needed in order to prevent 
		historic SCCS implementations to believe they could modify
		files without knowing about project global locks.

		Currently, SCCS V67 needs to be anebale manually for every
		history file using "admin".





-	Bourne Shell Missing features for POSIX compliance:

	- Support for $'...' quoting (this is not needed for the current
					version of POSIX but for the next POSIX
					version that will be named SUSv8).
					The development of SUSv8 will start in
					late 2016.

	We are now expecting the Bourne Shell to be fully POSIX compliant.

-	Bourne Shell further TODO list:

	-	Finish loadable builtin support.

	-	POSIX does not allow us to implement ". -h", so we will
		add a "source" builtin to be able to implement "source -h"

-	The following builtins (that are available in bsh) are still missing in
	the Bourne Shell:

	err			echo with output going to stderr
	glob			echo with '\0' instead of ' ' between args
	env			a builtin version of /usr/bin/env

	The following bsh intrinsics are still missing in the Bourne Shell:

	-			the restricted bsh has restriction features that
				are missing in the Bourne shell.

	-	source -h	read file into history but do not execute

	and probably more features not yet identified to be bsh unique.



Author:

Joerg Schilling
D-13353 Berlin
Germany

Email: 	joerg@schily.net, joerg.schilling@fokus.fraunhofer.de

Please mail bugs and suggestions to me.

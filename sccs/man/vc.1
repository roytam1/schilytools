'\" te
.\" @(#)vc.1	1.2 11/07/06 portions Copyright 2011 J. Schilling
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").  
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\"  Copyright 1989 AT&T  Copyright (c) 1990, Sun Microsystems, Inc.  All Rights Reserved
.TH vc 1 "2011/07/06" "SunOS 5.11" "User Commands"
.SH NAME
vc \- version control
.SH SYNOPSIS
.LP
.nf
\fBvc\fR [\fB-a\fR] [\fB-t\fR] [\fB-c\fR \fIchar\fR] [\fB-s\fR] 
    [\fIkeyword=value\fR... \fIkeyword=value\fR]
.fi

.SH DESCRIPTION
.sp
.LP
The \fBvc\fR command copies lines from the standard input to the standard output under control of its  arguments and of ``control statements'' encountered in the standard input. In the
process of performing the copy operation, user-declared \fIkeyword\fRs may be replaced by their string \fIvalue\fR when they appear in plain text and/or control
statements.
.sp
.LP
The copying of lines from the standard input to the standard output is conditional, based on tests (in control statements) of keyword values specified in control statements or as \fBvc\fR
command arguments.
.sp
.LP
A control statement is a single line beginning with a control character, except as modified by the \fB-t\fR keyletter (see below). The default control character is colon (\fB:\fR),
except as modified by the \fB-c\fR keyletter (see below). Input lines beginning with a backslash (\fB\e\fR) followed by a control character are not control lines and are copied
to the standard output with the backslash removed. Lines beginning with a backslash followed by a non-control character are copied in their entirety.
.sp
.LP
A keyword is composed of 9 or less alphanumerics; the first must be alphabetic. A value is any \fBASCII\fR string that can be created with \fBed\fR; a numeric
value is an unsigned string of digits. Keyword values may not contain blanks or tabs.
.sp
.LP
Replacement of keywords by values is done whenever a keyword  surrounded by control characters is encountered on a version control statement. The \fB-a\fR keyletter (see below) forces replacement
of keywords in all lines of text. An uninterpreted control character may be included in a value by preceding it with \fB\e\fR\&. If a literal \fB\e\fR is desired, then it
too must be preceded by \fB\e\fR\&.
.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
\fB\fB-a\fR\fR
.ad
.RS 10n
.rt  
Forces replacement of keywords surrounded by control characters with their assigned value in
all text lines and not just in \fBvc\fR statements.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-t\fR\fR
.ad
.RS 10n
.rt  
All characters from the beginning of a line up to and including the first tab character are ignored for the purpose of detecting a control statement.
If a control statement is found, all characters up to and including the tab are discarded.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-c\fR\fIchar\fR\fR
.ad
.RS 10n
.rt  
Specifies a control character to be used in place of the ``\fB:\fR'' default.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-s\fR\fR
.ad
.RS 10n
.rt  
Silences warning messages (not error) that are normally printed on the diagnostic output.
.RE

.sp
.LP
\fBvc\fR recognizes the following version control statements:
.sp
.ne 2
.mk
.na
\fB\fB:dcl \fR\fIkeyword\fR[\fB, \fR...\fB, \fR\fIkeyword\fR]\fR
.ad
.sp .6
.RS 4n
Declare keywords.  All keywords must be declared.
.RE

.sp
.ne 2
.mk
.na
\fB\fB:asg \fR\fIkeyword\fR\fB=\fR\fIvalue\fR\fR
.ad
.sp .6
.RS 4n
Assign values to keywords. An \fBasg\fR
statement overrides the assignment for the corresponding keyword on the \fBvc\fR command line and all previous \fBasg\fR statements for that keyword. Keywords that are declared
but are not assigned values have null values.
.RE

.sp
.ne 2
.mk
.na
\fB\fB:if\fR\fI condition\fR\fR
.ad
.br
.na
\fB\&.\|.\|.\fR
.ad
.br
.na
\fB\fB:end\fR\fR
.ad
.sp .6
.RS 4n
Skip lines of the standard input.
If the condition is true, all lines between the \fBif\fR statement and the matching \fBend\fR statement are copied to the standard output. If the condition is false, all intervening
lines are discarded, including control statements. Note:  Intervening \fBif\fR statements and matching \fBend\fR statements are recognized solely for the purpose of maintaining
the proper \fBif-end\fR matching.
.sp
The syntax of a condition is:
.sp
.ne 2
.mk
.na
\fB<cond>\fR
.ad
.RS 11n
.rt  
::=  [ ``\fBnot\fR'' ] \fI<or>\fR
.RE

.sp
.ne 2
.mk
.na
\fB<or>\fR
.ad
.RS 11n
.rt  
::=  \fI<and> | <and> \fR``\fB|\fR'' \fI<or>\fR
.RE

.sp
.ne 2
.mk
.na
\fB<and>\fR
.ad
.RS 11n
.rt  
::=  \fI<exp> | <exp> \fR``\fB&\fR\&'' \fI<and>\fR
.RE

.sp
.ne 2
.mk
.na
\fB<exp>\fR
.ad
.RS 11n
.rt  
::=  ``\fB(\fR'' \fI<or> \fR``\fB)\fR'' \fI| <value> <op> <value>\fR
.RE

.sp
.ne 2
.mk
.na
\fB<op>\fR
.ad
.RS 11n
.rt  
::=  ``\fB=\fR'' \fI| \fR``\fB!=\fR'' \fI| ``\fR\fB<\fR\&'' | ``\fB>\fR''\fI\fR
.RE

.sp
.ne 2
.mk
.na
\fB<value>\fR
.ad
.RS 11n
.rt  
::=  \fI<arbitrary ASCII string> | <numeric string>\fR
.RE

The available operators and their meanings are:  
.sp
.ne 2
.mk
.na
\fB\fB=\fR\fR
.ad
.RS 7n
.rt  
equal
.RE

.sp
.ne 2
.mk
.na
\fB\fB!=\fR\fR
.ad
.RS 7n
.rt  
not equal
.RE

.sp
.ne 2
.mk
.na
\fB\fB&\fR\fR
.ad
.RS 7n
.rt  
and
.RE

.sp
.ne 2
.mk
.na
\fB\fB|\fR\fR
.ad
.RS 7n
.rt  
or
.RE

.sp
.ne 2
.mk
.na
\fB\fB>\fR\fR
.ad
.RS 7n
.rt  
greater than
.RE

.sp
.ne 2
.mk
.na
\fB\fB<\fR\fR
.ad
.RS 7n
.rt  
less than
.RE

.sp
.ne 2
.mk
.na
\fB\fB()\fR\fR
.ad
.RS 7n
.rt  
used for logical groupings
.RE

.sp
.ne 2
.mk
.na
\fB\fBnot\fR\fR
.ad
.RS 7n
.rt  
may only occur immediately after the \fBif\fR, and when present, inverts the value of the entire condition
.RE

The \fB>\fR and \fB<\fR operate only on unsigned integer values (for example, \fB: 012 > 12\fR is false). All other operators take strings as arguments (for
example, \fB: 012 != 12\fR is true).
.sp
The precedence of the operators (from highest to lowest) is:  
.sp
.ne 2
.mk
.na
\fB\fB= != > <\fR\fR
.ad
.RS 12n
.rt  
all of equal precedence
.RE

.sp
.ne 2
.mk
.na
\fB\fB&\fR\fR
.ad
.RS 12n
.rt  

.RE

.sp
.ne 2
.mk
.na
\fB\fB|\fR\fR
.ad
.RS 12n
.rt  

.RE

Parentheses may be used to alter the order of precedence.
.sp
Values must be separated from operators or parentheses by at least one blank or tab.
.RE

.sp
.ne 2
.mk
.na
\fB\fB::\fR\fItext\fR\fR
.ad
.sp .6
.RS 4n
Replace keywords on lines that are copied to the standard output. The two leading control characters are removed,
and keywords surrounded by control characters in text are replaced by their value before the line is copied to the output file. This action is independent of the \fB-a\fR keyletter.
.RE

.sp
.ne 2
.mk
.na
\fB\fB:on\fR\fR
.ad
.br
.na
\fB\fB:off\fR\fR
.ad
.sp .6
.RS 4n
Turn on or off keyword replacement on all lines.
.RE

.sp
.ne 2
.mk
.na
\fB\fB:ctl\fR\fI char\fR\fR
.ad
.sp .6
.RS 4n
Change the control character to \fIchar\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fB:msg\fR\fI message\fR\fR
.ad
.sp .6
.RS 4n
Print \fImessage\fR on the diagnostic output.
.RE

.sp
.ne 2
.mk
.na
\fB\fB:err\fR\fI message\fR\fR
.ad
.sp .6
.RS 4n
Print \fImessage\fR followed by:
.sp
\fB      ERROR: err statement on line ... (915)\fR
.sp
on the diagnostic output. \fBvc\fR halts execution, and returns an exit code of \fB1\fR.
.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following
attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWsprot
.TE

.SH SEE ALSO
.sp
.LP
\fBed\fR(1), \fBattributes\fR(5)

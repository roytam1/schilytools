'\" te
.\" @(#)sccs-get.1	1.51 20/09/17 Copyright 2007-2020 J. Schilling
.\" Copyright (c) 1999, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2007-2015, J. Schilling
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may use this file only in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.if t .ds a \v'-0.55m'\h'0.00n'\z.\h'0.40n'\z.\v'0.55m'\h'-0.40n'a
.if t .ds o \v'-0.55m'\h'0.00n'\z.\h'0.45n'\z.\v'0.55m'\h'-0.45n'o
.if t .ds u \v'-0.55m'\h'0.00n'\z.\h'0.40n'\z.\v'0.55m'\h'-0.40n'u
.if t .ds A \v'-0.77m'\h'0.25n'\z.\h'0.45n'\z.\v'0.77m'\h'-0.70n'A
.if t .ds O \v'-0.77m'\h'0.25n'\z.\h'0.45n'\z.\v'0.77m'\h'-0.70n'O
.if t .ds U \v'-0.77m'\h'0.30n'\z.\h'0.45n'\z.\v'0.77m'\h'-0.75n'U
.if t .ds s \\(*b
.if t .ds S SS
.if n .ds a ae
.if n .ds o oe
.if n .ds u ue
.if n .ds s sz
.TH sccs-get 1 "2020/09/17" "SunOS 5.11" "User Commands"
.SH NAME
sccs-get, get \- retrieve a version of an SCCS file
.SH SYNOPSIS
.LP
.B /usr/ccs/bin/get
.RB [ -beFgkmnopst ]
.RB [ -l
[p]]
.RB [ -a\c
.IR sequence ]
.br
.RB "    [" -c
.I date-time
|
.BI -c date-time\c
]
.RB [ -G\c
.IR g-file ]
.RB [ -w\c
.IR %\&W%-string ]
.br
.RB "    [" -i
.I sid-list
|
.BI -i sid-list\c
]
.RB [ -q\c
.RI [ nsedelim "]] \c
.RB [ -r
.RI [ sid ]]
.br
.RB "    [" -x
.I sid-list
|
.BI -x sid-list\c
]
.RB [ -z\c
.RI [ cmr "]]
.br
.RB "    [" \-X\c
.IR extended-options "] \c
.RB [ -N\c
.IR bulk-spec "] \c
.IR s.filename ...

.LP
.nf
.B "/usr/xpg4/bin/get \c
.RB [ -beFgkmnopst "] \c
.RB [ "-l \c
[p]] \c
.RB [ -a\c
.IR sequence ]
.br
.RB "    [" "-c \c
.I date-time \c
| \c
.BI -c date-time\c
] \c
.RB [ -G\c
.IR g-file "] \c
.RB [ -w\c
.IR %\&W%-string ]
.br
.RB "    [" "-i \c
.I sid-list \c
| \c
.BI -i sid-list\c
] \c
.RB [ -q\c
.RI [ nsedelim "]] \c
.RB [ "-r \c
.I sid \c
| \c
.BI -r sid\c
]
.br
.RB "    [" "-x \c
.I sid-list \c
| \c
.BI -x sid-list\c
] \c
.RB [ -z\c
.RI [ cmr "]]
.br
.RB "    [" \-X\c
.IR extended-options "] \c
.RB [ -N\c
.IR bulk-spec "] \c
.IR s.filename ...
.fi

.SH DESCRIPTION
.LP
The
.B get
utility retrieves a working copy from the SCCS history file,
according to the specified options.

.LP
For each
.I s.filename
argument,
.B get
displays the  SCCS delta
.B ID
(SID) and number of lines retrieved.

.LP
If a directory name is used in place of the
.I s.filename
argument, the
.B get
command applies to all
.BR  s. files
in that directory. Unreadable
.BR s. files
produce an error; processing continues with the next file (if
any). The use of
.RB ` \(mi \&'
as the
.I s.filename
argument indicates
that the names of files are to be read from the standard input, one
.BR s. file
per line.

.LP
The retrieved file normally has the same filename base as the
.BR s. file,
less the prefix, and is  referred to as the
.BR g- file.

.LP
For each file processed,
.B get
responds (on the standard output) with the
.B SID
being accessed, and with the number of lines retrieved from the
.BR s. file.

.SH OPTIONS

.LP
The following options are supported:

.br
.ne 4
.TP 13
.B \-A
Annotates the output. Precedes each line with the programmer who last
changed that line and the related date. This option may be combined with
the options
.B \-m
and
.BR \-n .
When combined with other annotate options, the text related to
.B \-A
is inserted last.
Future versions of
.BR get (1)
may add support for a parameter to this option that implements some of
the
.B prs \-d
data specs.
.sp
This option is a
.B \s-1SCHILY\s+1
extension that does not exist in historic
.B sccs
implementations.

.br
.ne 4
.TP
.BI -a sequence
Retrieves the version corresponding to the indicated delta sequence number.
This option is used primarily by the SCCS
.B comb
command (see 
.BR sccs-comb (1)).
For users,
.B -r
is an easier way to specify a
version. The
.B -a
option supersedes the
.B -r
option when both are used.

.br
.ne 3
.TP
.B -b
Creates a new branch. Used with the
.B -e
option to indicate that the new delta should have a
.B SID
in a new branch. Instead of incrementing
the level for version to be checked in,
.B get
indicates in the
.BR p. file
that the delta to be checked in should either initialize a new
branch and sequence (if there is no existing branch at the current level),
or increment the branch component of the
.BR SID .
If the
.B b
flag is not set in the
.BR s. file,
this option is ignored.

.br
.ne 3
.TP
.BI "-c " date-time
.TP
.BI -c date-time
Retrieves the latest version checked in prior to the date and time indicated by
the
.I date-time
argument.
.I date-time
takes the form:

.sp
 \fIyy\fR[\fImm\fR[\fIdd\fR[ \fIhh\fR[\fImm\fR[\fIss\fR]\|]\|]\|]\|]
.sp

Units omitted from the indicated date and time default to their maximum
possible values; that is
.B \-c7502
is equivalent to
.BR \-c750228235959 .
Values of
.I yy
in the range
.BR 69 \(mi 99
refer to the twentieth century. Values in the range
.BR 00 \(mi 68
refer to the twenty-first century.
Any number of non-numeric characters may separate
the various 2 digit components. If white-space characters occur, the
.I date-time
specification must be quoted.
.sp
A
.I date-time
specification in the form:
.sp
 \fIyyyy/\fR[\fImm\fR[\fIdd\fR[\fIhh\fR[\fImm\fR[\fIss\fR]\|]\|]\|]\|]
.sp
refers to a 4-digit year and allows to specify a year outside the
range
.BR 1969 \(mi 2068 .

.br
.ne 3
.TP
.B -e
Retrieves a version for editing. With this option,
.B get
places a lock on the
.BR s. file,
so that no one else can check in changes to the version
you have checked out. If the
.B j
flag is set in the
.BR s. file,
the lock is advisory:
.B get
issues a warning message. Concurrent use of
.RB ` "get -e" '
for different
.BR SID s
is allowed. However,
.B get
will not check out a version of the file if a writable version is present
in the directory. All SCCS file protections stored in the
.BR s. file,
including the release ceiling, floor, and authorized user list, are honored by
.RB ` "get -e" '.

.br
.ne 3
.TP
.B \-F
Enforce to retrieve the
.BR g. file
even if a SID specific checksum mismatch has been detected.
.sp
This option is a
.B \s-1SCHILY\s+1
extension that does not exist in historic
.B sccs
implementations.

.br
.ne 3
.TP
.B -g
Gets the SCCS version
.BR ID ,
without retrieving the version itself. Used
to verify the existence of a particular
.BR SID .

.br
.ne 3
.TP
.BI -G newname
Uses
.I newname
as the name of the retrieved version.

.br
.ne 3
.TP
.BI "-i " sid-list
.TP
.BI -i sid-list
Specifies a list of deltas to include in the retrieved version. The
included deltas are noted in the standard output message.
.I sid-list
is a comma-separated list of
.BR SID s.
To specify a range of deltas, use a 
.RB ` \(mi '
separator instead of a comma, between two
.BR SID s
in the list.

.br
.ne 3
.TP
.B -k
Suppresses expansion of
.B ID
keywords.
.B -k
is implied by the
.BR -e .
.sp
Note that keywords in SCCS history files that are uu-encoded are never expanded;
also note that SCCsv6 history files that hold binary data by default have
keyword expansion disabled (see 
.RB `` "admin -fy" '').

.br
.ne 3
.TP
.BR \-l \|[\| p \|] 
Retrieves a summary of the delta table (version log) and write it to a
listing file, with the
.RB ` l. '
prefix (called
.RB ` l. file').
When 
.B \-lp
is used, write the summary onto the standard output.

.br
.ne 3
.TP
.B \-L
Treated as if
.B \-lp
was given.

.br
.ne 3
.TP
.B -m
Precedes each retrieved line with the
.B SID
of the delta in which it was added to the file. The
.B SID
is separated from the line with a TAB.

.sp
.ne 3
.TP
.BI -N bulk-spec
Processes a bulk of SCCS history files.
This option allows to do an efficient mass processing of SCCS history files.
.sp
The
.I bulk-spec
parameter is composed from an optional list of
.B flag
parameters followed by an optional
.B path
specifier.
.sp
The following flag types are supported:
.RS
.TP 10
.B ++
If
.I bulk-spec
is preceded by a
.BR `++' ,
.BR get (1)
expects to process filenames that are prepended by a plus sign,
the related
.B SID
and another plus sign following the form:
.sp
.BI "    +" sid +\c
.I filename
.sp
This permits each file to be retrieved with an individual
.BR SID .
.TP
.B space
This is a placeholder dummy flag that allows to use a prepared string for
the 
.B \-N
option and to replace the space character by one of the supported flags
on demand.
.LP
The following path specifier types are supported:
.TP 10
.B \-N
The file name parameters to the
.B get
command are not
.I s.filename
files but the names of the g-files.
The
.I s.filename
names are automatically derived from the g-file names by prepending
.B s.
to the last path name component.
Both,
.I s.filename
and the g-file are in the same directory.
.TP
.B \-Ns.
The file name parameters to the
.B get
command are
.I s.filename
files.
The the g-files names are automatically derived by removing
.B s.
from the beginning of last path name component of the
.IR s.filename.
Both,
.I s.filename
and the g-file are in the same directory.
.TP
.BI \-N dir
The file name parameters to the
.B get
command are not
.I s.filename
files but the names of the g-files.
The
.I s.filename
names are put into directory
.IR dir ,
the names are automatically derived from the g-file names by prepending
.IB dir /s.
to the last path name component.
.TP
.BI \-N dir /s.
The file name parameters to the
.B get
command are
.I s.filename
files in directory
.IR dir .
The the g-files names are automatically derived by removing
.IB dir /s.
from the beginning of last path name component of the
.IR s.filename.
.PP
A typical value for
.I dir
is
.BR SCCS .
.PP
In order to overcome the limited number of
.BR exec (2)
arguments, it is recommended to use
.RB ` \(mi \&'
as the file name parameter for
.BR get (1)
and to send a list of path names to
.BR stdin .
.PP
This option is a
.B \s-1SCHILY\s+1
extension that does not exist in historic
.B sccs
implementations.
.RE

.br
.ne 3
.TP
.B -n
Precedes each line with the
.B "%\&M% ID"
keyword and a TAB. When both the
.B -m
and
.B -n
options are used, the
.B ID
keyword precedes the
.BR SID ,
and the line of text.

.br
.ne 3
.TP
.B \-o
Retrieves the file under the original time of the requested version.
.sp
Use this option with care, as it may be in conflict with
.BR make (1)
rules. Using
.RB ` "get -o" '
thus may cause
.B make 
to perform an automatic retrieval of the latest version as the
.BR s. file
is newer than the gotten file, or cause
.B make
to skip the compilation
as the compilation result is already newer than the gotten file.
.sp
This option is a
.B \s-1SCHILY\s+1
extension that does not exist in historic
.B sccs
implementations.

.br
.ne 3
.TP
.B -p
Writes the text of the retrieved version to the standard output. All
messages that normally go to the standard output are written to the standard
error instead.

.br
.ne 3
.TP
.BI -q\fR[ nsedelim\fR]
Enable
.B NSE
mode.
If
.B NSE
mode is enabled, several
.B NSE
related extensions may be used.
In this release, the value of
.I nsedelim
is ignored.
.sp
In NSE mode,
.B get
never issues a warning about missing
.BR "id keyword" s.
.sp
This option is an undocumented
.B \s-1SUN\s+1
extension that does not exist in historic
.B sccs 
implementations.

.br
.ne 3
.TP
.B -s
Suppresses all output normally written on the standard output. However,
fatal error messages (which always go to the standard error) remain
unaffected.
.sp
.ne 2
.TP
.B -t
Retrieves the most recently created (top) delta in a given release (for
example:
.BR -r1 ).

.br
.ne 3
.TP
.BI -w %\&W%-string
The
.I %\&W%-string
is used as a replacement for the
.B %\&W%
keyword.
If
.B \-w
was not specified, 
.B %\&W%
is expanded to
.BR "%\&Z%%\&M%  %\&I%" ,
otherwise the argument from
.B \-w
is used.
.sp
This option is an undocumented
.B SUN
extension that does not exist in historic
.B sccs
implementations.

.br
.ne 3
.TP
.BI \-X extended\-options
Specify extended options. The argument
.I extended\-options
may be a comma separated list of extended option names.
.sp
The following extended options are supported, they may be abbreviated as long
ad the abbreviation is still unique. Options with parameter may not be
abbreviated.
.sp
.RS
.TP
.B 0
When reading filenames from
.BR stdin ,
triggered by a file name argument
.RB ` - ',
the filename separator is a
.B null byte
instead of a
.BR newline .
This allows to use long lists with arbitrary filenames.
.TP
.B help
Print a short online help for available options.
.PP
The
.B \-X
option is a
.B \s-1SCHILY\s+1
extension that does not exist in historic
.B sccs
implementations.
.RE

.br
.ne 3
.TP
.BI -z\fR[ cmr\fR] 
Append MR number to CMR list for CMF extensions.
.sp
This option is an undocumented
.B SUN
extension that does not exist in historic
.B sccs
implementations.

.br
.ne 3
.TP
.BI \-C dir
Specify the base directory for the
.B g-file
relative to the current working directory.
By default, the
.B g-file
is created in the current directory (independent from
the location of the 
.BI s. file\fR.
.sp
This option is a
.B \s-1SCHILY\s+1
extension that does not exist in historic
.B sccs
implementations.

.br
.ne 3
.TP
.PD 0
.B \-V
.TP
.B \-version
.TP
.B \-\-version
.PD
Prints the
.B get
version number string and exists.
.sp
This option is a
.B \s-1SCHILY\s+1
extension that does not exist in historic
.B sccs
implementations.

.SS /usr/ccs/bin/get

.br
.ne 3
.TP 13
.B \-d
Do not print the number of gotten lines.
.sp
This option is an undocumented
.B SUN
extension that does not exist in historic
.B sccs
implementations.

.br
.ne 3
.TP
.BI -r\fR[ sid\fR]
Retrieves the version corresponding to the indicated
.B SID
(delta).
.sp
The
.B SID
for a given delta is a number, in Dewey decimal format,
composed of two or four fields: the
.I release
and
.I level
fields, and for branch deltas, the
.I branch
and
.I sequence
fields.  For instance, if
.B 1.2
is the
.BR SID ,
.B 1
is the release, and
.B 2
is the level number.  If
.B 1.2.3.4
is the
.BR SID ,
.B 3
is the branch and
.B 4
is the sequence number.
.sp
You need not specify the entire
.B SID
to retrieve a version with
.BR get .
When you omit
.B -r
altogether, or when you omit both release and level,
.B get
normally retrieves the highest release and level.  If the
.B d
flag is set to an
.B SID
in the
.BR s. file
and you omit the
.BR SID ,
.B get
retrieves the default
version indicated by that flag.
.sp
When you specify a release but omit the level,
.B get
retrieves the highest level in that release. If that release does not exist,
.B get
retrieves highest level from the next-highest existing release.
.sp
Similarly with branches, if you specify a release, level and branch,
.B get
retrieves the highest sequence in that branch.

.br
.ne 3
.TP
.BI "-x " sid-list
.TP
.BI -x\fR[ sid-list\fR]
Excludes the indicated deltas from the retrieved version. The excluded
deltas are noted in the standard output message.
.I sid-list
is a comma-separated list of
.BR SID s.
To specify a range of deltas, use a
.RB `  \(mi '
separator instead of a comma, between two
.BR SID s
in the list.

.RE
.SS /usr/xpg4/bin/get

.ne 3
.TP 13
.BI "-r " sid
.TP
.BI -r sid
Same as for
.B /usr/ccs/bin/get
except that
.B SID
is mandatory.

.br
.ne 3
.TP
.BI "-x " sid-list
.TP
.BI -x sid-list
Same as for
.B /usr/ccs/bin/get
except that
.B sid-list
is mandatory.

.SH OUTPUT

.SS /usr/ccs/bin/get

.LP
The output format for
.B /usr/ccs/bin/get
is as follows:

.LP
.in +2
.nf
\fB"%s\en%d lines\en"\fR, <\fISID\fR>, <\fInumber of lines\fR>
.fi
.in -2
.sp
The text
.B lines
may appear in the language of the current locale.

.SS /usr/xpg4/bin/get

.LP
The output format for
.B /usr/xpg4/bin/get
is as follows:

.LP
.in +2
.nf
\fB"%s\en%d lines\en"\fR, <\fISID\fR>, <\fInumber of lines\fR>
.fi
.in -2
.sp
The text
.B lines
is always in English.

.SH USAGE

.LP
Usage guidelines are as follows:

.SS ID Keywords

.LP
In the absence of
.B -e
or
.BR -k ,
.B get
expands the following
.B ID
keywords by replacing them with the indicated values in the text of
the retrieved source.

.LP

.sp
.TS
tab() box;
cw(.79i) |cw(4.71i) 
lw(.79i) |lw(4.71i) 
.
\fIKeyword\fR\fIValue\fR
_
\fB%\&A%\fRT{
Shorthand notation for an ID line with 
data for 
\fBwhat\fR(1)\fB: %\&Z%%\&Y%  %\&M%  %\&I%%\&Z%\fR
T}
_
\fB%\&B%\fRSID branch component
_
\fB%\&C%\fRT{
Current line number. Intended for identifying messages output by the program
such as ``\fIthis shouldn't have happened\fR'' type errors.  It
is \fInot\fR intended to be used on every line to provide sequence numbers.
T}
_
\fB%\&D%\fRCurrent date: \fIyy\fR/\fImm\fR/\fIdd\fR
_
\fB%\&d%\fRCurrent date: \fIyyyy\fR/\fImm\fR/\fIdd\fR
_
\fB%\&E%\fRT{
Date newest applied delta was created: \fIyy\fR/\fImm\fR/\fIdd\fR
T}
_
\fB%\&e%\fRT{
Date newest applied delta was created: \fIyyyy\fR/\fImm\fR/\fIdd\fR
T}
_
\fB%\&F%\fR\fBSCCS\fR \fBs.\fRfile name
_
\fB%\&G%\fRT{
Date newest applied delta was created: \fImm\fR/\fIdd\fR/\fIyy\fR
T}
_
\fB%\&g%\fRT{
Date newest applied delta was created: \fImm\fR/\fIdd\fR/\fIyyyy\fR
T}
_
\fB%\&H%\fRCurrent date: \fImm\fR\fB/\fR\fIdd\fR\fB/\fR\fIyy\fR
_
\fB%\&h%\fRCurrent date: \fImm\fR\fB/\fR\fIdd\fR\fB/\fR\fIyyyy\fR
_
\fB%\&I%\fR\fBSID\fR of the retrieved version: \fB%\&R%.%\&L%.%\&B%.%\&S%\fR
_
\fB%\&L%\fR\fBSID\fR level component
_
\fB%\&M%\fRT{
Module name: either the value of the \fBm\fR flag in the \fBs.\fRfile (see 
\fBsccs-admin\fR(1)), or the name of the \fBs.\fRfile less the prefix
T}
_
T{
\fB%\&P%\fR
T}Fully qualified \fBs.\fRfile name
_
\fB%\&Q%\fRValue of the \fBq\fR flag in the \fBs.\fRfile
_
\fB%\&R%\fR\fBSID\fR Release component
_
\fB%\&S%\fR\fBSID\fR Sequence component
_
\fB%\&T%\fRCurrent time: \fIhh\fR\fB:\fR\fImm\fR\fB:\fR\fIss\fR
_
\fB%\&U%\fRT{
Time the newest applied delta was
created: \fIhh\fR\fB:\fR\fImm\fR\fB:\fR\fIss\fR
T}
_
\fB%\&W%\fRT{
Shorthand notation for an \fBID\fR line with data
for \fBwhat\fR: \fB%\&Z%%\&M%  %\&I%\fR or get -w argument
T}
_
\fB%\&Y%\fRT{
Module type: value of the \fBt\fR flag in the \fBs.\fRfile
T}
_
\fB%\&Z%\fRT{
4-character string: `\fB@(#)\fR', recognized by \fBwhat\fR
T}
.TE
.LP
A line with a string in the
form
.BI %\&sccs.include. filename \&%
is replaced by
the content of the file
.IR filename .
The file is searched for in the path list found in the environment variable
.BR SCCS_INCLUDEPATH .
.LP
The keywords
.BR %\&d\&% ", " %\&e\&% ", " %\&g\&%
and
.B %\&h\&%
are only expanded if either the 
.B `x'
flag has been set by the 
.BR admin (1)
command or if the expansion for a specific keyword has been enabled
via the
.B `y'
flag.

.SS ID String

.LP
The table below explains how the  SCCS identification string is  determined
for retrieving and creating deltas.

.LP

.sp
.TS
tab() box;
cbw(.92i) sw(.92i) sw(1.38i) sw(.92i) sw(1.38i)
cw(.92i) |cw(.92i) |cw(1.38i) |cw(.92i) |cw(1.38i)
cw(.92i) |cw(.92i) |cw(1.38i) |cw(.92i) |cw(1.38i)
lw(.92i) |lw(.92i) |lw(1.38i) |lw(.92i) |lw(1.38i)
.
Determination of SCCS Identification String
_
SID \fB(1)\fP\fB-b\fR OptionOtherSIDSID of Delta
SpecifiedUsed \fB(2)\fPConditionsRetrievedto be Created
_
none \fB(3)\fPnoR defaults to mRmR.mLmR.(mL+1)
none \fB(3)\fPyesR defaults to mRmR.mLmR.mL.(mB+1).1
RnoR > mRmR.mLR.1 \fB(4)\fP
RnoR = mRmR.mLmR.(mL+1)
RyesR > mRmR.mLmR.mL.(mB+1).1
RyesR = mRmR.mLmR.mL.(mB+1).1
R\(miT{
R < mR and R does \fInot\fR exist
T}hR.mL \fB(5)\fPhR.mL.(mB+1).1
R\(miT{
Trunk succ. \fB(6)\fP in release > R and R exists
T}R.mLR.mL.(mB+1).1
R.LnoNo trunk succ.R.LR.(L+1)
R.LyesNo trunk succ.R.LR.L.(mB+1).1
R.L\(miT{
Trunk succ. in release \(>= R
T}R.LR.L.(mB+1).1
R.L.BnoNo branch succ.R.L.B.mSR.L.B.(mS+1)
R.L.ByesNo branch succ.R.L.B.mSR.L.(mB+1).1
R.L.B.SnoNo branch succ.R.L.B.SR.L.B.(S+1)
R.L.B.SyesNo branch succ. R.L.B.SR.L.(mB+1).1
R.L.B.S\(miBranch succ.R.L.B.SR.L.(mB+1).1
.TE

.br
.ne 3
.TP 5n
.B (1)
`R', `L', `B', and `S' are the `release', `level', `branch', and `sequence'
components of the
.BR SID ,
respectively; `m' means `maximum'. Thus, for
example, `R.mL' means `the maximum level number within release R';
`R.L.(mB+1).1' means `the first sequence number on the
.I new
branch (that is, maximum branch number plus one) of level L within release R'.
.I Note:
If the
.B SID
specified is of the form `R.L', `R.L.B', or `R.L.B.S',
each of the specified components
.I must
exist.

.br
.ne 3
.TP
.B (2)
The
.B -b
option is effective only if the
.B b
flag is present in the file. An entry of
.RB ` \(mi '
means `irrelevant'.

.br
.ne 3
.TP
.B (3)
This case applies if the
.B d
(default
.BR SID )
flag is
.I not
present in the file.  If the
.B d
flag
.I is
present in the file, the
.B SID
obtained from the
.B d
flag is interpreted as if it had been specified on the command line. Thus,
one of the other cases in this table applies.

.br
.ne 3
.TP
.B (4)
Forces creation of the
.I first
delta in a
.I new
release.

.br
.ne 3
.TP
.B (5)
`hR' is the highest
.I existing
release that is lower than the specified,
.IR nonexistent ,
release R.

.br
.ne 3
.TP
.B (6)
Successor.

.SH ENVIRONMENT VARIABLES
.sp
.LP
See
.BR environ (5)
for descriptions of the following environment variables that affect the
execution of
.BR get (1):
.BR LANG ,
.BR LC_ALL ,
.BR LC_COLLATE ,
.BR LC_CTYPE ,
.BR LC_MESSAGES ,
and
.BR NLSPATH .

.br
.ne 4
.TP
.B SCCS_INCLUDEPATH
A colon separated list of directories where to look for include
files for a
.BI %\&sccs.include. filename \&%
replacement.
If the environment
.B SCCS_INCLUDEPATH
does not exist, the include files are looked for in
.BR /usr/ccs/include/ .

.br
.ne 4
.TP
.B SCCS_NO_HELP
If set,
.BR get (1)
will not automatically call
.BR help (1)
with the SCCS error code in order to print a more helpful
error message. Scripts that depend on the exact error messages
of SCCS commands should set the environment variable
.B SCCS_NO_HELP
and set
.BR LC_ALL=C .

.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.sp
.ne 2
.TP 5
.B 0
Successful completion.
.sp
.ne 2
.TP
.B 1
An error occurred.

.SH FILES

.br
.ne 3
.TP 12
.B ``g-file''
version retrieved by
.B get

.br
.ne 3
.TP
.BI l. file
file containing extracted delta table info

.br
.ne 3
.TP
.BI p. file
permissions (lock) file for checked-out versions.
The
.BR p. file
has an arbitrary number of lines, each is related to a
.B get \-e
call. Each line has the following structure:
.sp
.RS +15
.I old-sid
.I new-sid
.I username
.I date
.IR time " \e
.br
[
.BI -i i-arg
][
.BI -x x-arg
][
.BI -z z-arg
]
.RE
.RS +12
.LP
The
.I old-sid
is the SID that was checked out with
.BR "get \-e" ,
the
.I new-sid
is the SID that will be used for the new version when
.B delta
is called. The
.I username
is the user-name corresponding to the real user ID at the time
.B get \-e
was called. The
.I date
and
.I time
fields are in the same format as used in the delta table of the
.BI s. file
as described in
.BR sccsfile (4)
for
.B SCCS
v4.
In order to grant POSIX compatibility, a two digit year is used
between 1969 and 2068. For years outside that range, a four digit
year is used.
The following fields are only present when one or more of the
.B \-i
.B \-x
or
.B \-z
options have been specified on the command line, they refer to the
list of included and excluded deltas or to the CMR list from the
NSE enhancements.
.RE

.br
.ne 3
.TP
.BI q. file
temporary copy of the 
.BR p. file; 
renamed to the 
.BR p. file 
after completion 

.br
.ne 3
.TP
.BI s. file
.B SCCS
history file, see
.BR sccsfile (4).

.br
.ne 3
.TP
.BI z. file
temporary lock file contains the binary process id in host byte order 
followed by the host name

.br
.ne 3
.TP
.B dump.core
If the file
.B dump.core
exists in the current directory and a fatal signal is received, a coredump
is initiated via
.BR abort (3).

.br
.ne 3
.TP
.B /usr/ccs/include/
If the environment
.B SCCS_INCLUDEPATH
does not exist, include files for the
.BI %\&sccs.include. filename \&%
keyword directive are searched in this directory.

.SH ATTRIBUTES

.LP
See 
.BR attributes (5)
for descriptions of the following attributes:
.sp

.SS /usr/ccs/bin/get

.LP

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySCHILYdeveloper-build-sccs
AvailabilitySUNWsprot
.TE

.SS /usr/xpg4/bin/get

.LP

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySCHILYdeveloper-build-sccs-xcu4
AvailabilitySUNWxcu4t
_
Interface StabilityStandard
.TE

.SH SEE ALSO
.nh
.LP
.BR sccs (1),
.BR sccs\-add (1),
.BR sccs\-admin (1),
.BR sccs\-branch (1),
.BR sccs\-cdc (1),
.BR sccs\-check (1),
.BR sccs\-clean (1),
.BR sccs\-comb (1),
.BR sccs\-commit (1),
.BR sccs\-create (1),
.BR sccs\-cvt (1),
.BR sccs\-deledit (1),
.BR sccs\-delget (1),
.BR sccs\-delta (1),
.BR sccs\-diffs (1),
.BR sccs\-edit (1),
.BR sccs\-editor (1),
.BR sccs\-enter (1),
.BR sccs\-fix (1),
.BR sccs\-help (1),
.BR sccs\-histfile (1),
.BR sccs\-info (1),
.BR sccs\-init (1),
.BR sccs\-istext (1),
.BR sccs\-ldiffs (1),
.BR sccs\-log (1),
.BR sccs\-print (1),
.BR sccs\-prs (1),
.BR sccs\-prt (1),
.BR sccs\-rcs2sccs (1),
.BR sccs\-remove (1),
.BR sccs\-rename (1),
.BR sccs\-rmdel (1),
.BR sccs\-root (1),
.BR sccs\-sact (1),
.BR sccs\-sccsdiff (1),
.BR sccs\-status (1),
.BR sccs\-tell (1),
.BR sccs\-unedit (1),
.BR sccs\-unget (1),
.BR sccs\-val (1),
.BR bdiff (1), 
.BR diff (1), 
.BR what (1),
.BR sccschangeset (4),
.BR sccsfile (4),
.BR attributes (5),
.BR environ (5),
.BR standards (5).
.hy 14

.SH DIAGNOSTICS

.LP
Use the SCCS
.B help
command for explanations (see 
.BR sccs-help (1)).


.SH BUGS

.LP
If the effective user has write permission (either explicitly or
implicitly) in the directory containing the SCCS files, but the real user
does not, only one file may be named when using
.BR -e .

.SH AUTHORS
The
.B SCCS
suite was originally written by Marc J. Rochkind at Bell Labs in 1972.
Release 4.0 of
.BR SCCS ,
introducing new versions of the programs
.BR admin (1),
.BR get (1),
.BR prt (1),
and
.BR delta (1)
was published on February 18, 1977; it introduced the new text based
.B SCCS\ v4
history file format (previous
.B SCCS
releases used a binary history file format).
The
.B SCCS
suite
was later maintained by various people at AT&T and Sun Microsystems.
Since 2006, the
.B SCCS
suite is maintained by J\*org Schilling.

.br
.ne 7
.SH "SOURCE DOWNLOAD"
A frequently updated source code for the
.B SCCS
suite is included in the
.B schilytools
project and may be retrieved from the
.B schilytools
project at Sourceforge at:
.LP
.B
    http://sourceforge.net/projects/schilytools/
.LP
The download directory is:
.LP
.B
    http://sourceforge.net/projects/schilytools/files/
.LP
Check for the
.B schily\-*.tar.bz2
archives.
.LP
Less frequently updated source code for the
.B SCCS
suite is at:
.LP
.B
    http://sourceforge.net/projects/sccs/files/
.LP
Separate project informations for the
.B SCCS
project may be retrieved from:
.LP
.B
    http://sccs.sf.net
.br

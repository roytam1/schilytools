'\" te
.\" @(#)diff.1	1.21 18/03/15 Copyright (c) 2011-2018 J. Schilling
.\" Copyright 1989 AT&T
.\" Copyright (c) 2004, Sun Microsystems, Inc.  All Rights Reserved
.\" Portions Copyright (c) 1992, X/Open Company Limited  All Rights Reserved
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may use this file only in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.if t .ds a \v'-0.55m'\h'0.00n'\z.\h'0.40n'\z.\v'0.55m'\h'-0.40n'a
.if t .ds o \v'-0.55m'\h'0.00n'\z.\h'0.45n'\z.\v'0.55m'\h'-0.45n'o
.if t .ds u \v'-0.55m'\h'0.00n'\z.\h'0.40n'\z.\v'0.55m'\h'-0.40n'u
.if t .ds A \v'-0.77m'\h'0.25n'\z.\h'0.45n'\z.\v'0.77m'\h'-0.70n'A
.if t .ds O \v'-0.77m'\h'0.25n'\z.\h'0.45n'\z.\v'0.77m'\h'-0.70n'O
.if t .ds U \v'-0.77m'\h'0.30n'\z.\h'0.45n'\z.\v'0.77m'\h'-0.75n'U
.if t .ds s \\(*b
.if t .ds S SS
.if n .ds a ae
.if n .ds o oe
.if n .ds u ue
.if n .ds s sz
.TH diff 1 "2018/03/15" "SunOS 5.11" "User Commands"
.SH NAME
diff \- compare two files
.SH SYNOPSIS
.LP
.nf
.B diff \c
.RB [ -abBiNptw "] [" "-c \c
.RB "| " -e " | " "-f \c
.RB "| " -h " | " "-n \c
.RB "| " -q " | " -u "] \c
.I file1 file2
.fi

.LP
.nf
.B diff \c
.RB [ -abBiNptw "] [" "-C \c
.I number \c
.RB "| " "-U \c
.I number\c
] \c
.I file1 file2
.fi

.LP
.nf
.B diff \c
.RB [ -abBiNptw "] [" "-D \c
.IR string "] \c
.I file1 file2
.fi

.LP
.nf
.B diff \c
.RB [ -abBiNptw "] [" "-c \c
.RB "| " -e " | " "-f \c
.RB "| " -h " | " "-n \c
.RB "| " -q " | " -u "] \c
.RB [ -l "] [" -r "] \c
.RB [ -s ]
.RB "     [" "-S \c
.IR name "] \c
.I directory1 directory2
.fi

.SH DESCRIPTION
.sp
.LP
The
.B diff
utility will compare the contents of
.I file1
and
.I file2
and write to standard output a list of changes necessary to
convert
.I file1
into
.IR file2 .
This list should be minimal. Except in
rare circumstances,
.B diff
finds a smallest sufficient set of file
differences. No output will be produced if the files are identical.
.sp
.LP
The normal output contains lines of these forms:
.sp
.in +2
.nf
.I n1\c
.B " a \c
.IR n3 , n4
.IR n1 , n2\c
.B " d \c
.I n3
.IR n1 , n2\c
.B " c \c
.IR n3 , n4
.fi
.in -2
.sp

.sp
.LP
where
.I n1
and
.I n2
represent lines
.I file1
and
.I n3
and
.I n4
represent lines in
.I file2
These lines resemble
.BR ed (1)
commands to convert
.I file1
to
.IR file2 .
By exchanging
.B a
for
.B d
and reading backward,
.I file2
can be converted to
.IR file1 .
As
in
.BR ed ,
identical pairs, where
.IR n1 = n2
or
.IR n3 = n4 ,
are abbreviated as a single number.
.sp
.LP
Following each of these lines come all the lines that are affected in the
first file flagged by
.RB ` \|<\| ',
then all the lines that are affected in
the second file flagged by
.RB ` \|\>\| '.
.SH OPTIONS
.sp
.LP
The following options are supported:
.br
.ne 2
.TP
.B \-a
Treat all files as
.B ASCII
text.
Normally
.B diff
will simply print
.B `Binary files ... and ... differ'
if files contain binary characters.
Use of this option forces
.B diff
to produce a diff.

.br
.ne 2
.TP
.B \-b
Ignores trailing blanks (spaces and tabs) and treats other strings of blanks
as equivalent.

.br
.ne 2
.TP
.B \-B
Ignores changes that just inserted or deleted blank (empty) lines.

.br
.ne 2
.TP
.B \-i
Ignores the case of letters. For example,
.RB ` A '
will compare equal to
.RB ` a '.

.br
.ne 2
.TP
.B \-N
New file mode, treat absent files as empty.
If 
.BR diff (1)
prints time stamps for files, the time stamp for missing files will refer
to January 1 1970 00:00:00 GMT.

.br
.ne 2
.TP
.B \-p
With unified and context diffs, show with each change the first
40 characters of the last line before the context beginning with
a letter, an underscore or a dollar sign.
For C source code following standard layout conventions,
this will show the prototype of the function the change applies to.

.br
.ne 2
.TP
.B \-t
Expands TAB characters in output lines. Normal or
.B \-c
output adds
character(s) to the front of each line that may adversely affect the
indentation of the original source lines and make the output lines difficult
to interpret. This option will preserve the original source's indentation.

.br
.ne 2
.TP
.B \-w
Ignores all blanks (SPACE and TAB characters) and treats all other strings
of blanks as equivalent. For example,
.RB ` "if ( a =\|= b )" '
will compare
equal to
.RB ` if(a=\|=b) '.

.LP
The following options are mutually exclusive:
.br
.ne 2
.TP 12n
.B \-c
Produces a listing of differences with three lines of context. With this
option, output format is modified slightly. That is, output begins with
identification of the files involved and their creation dates, then each
change is separated by a line with a dozen
.BR * 's.
The lines removed from
.I file1
are marked with '\(em'. The lines added to
.I file2
are marked
\&'\|+\|'. Lines that are changed from one file to the other are marked in
both files with '\|!\|'.

.br
.ne 2
.TP
.BI \-C " number
Produces a listing of differences identical to that produced by
.BR \-c
with
.I number
lines of context.

.br
.ne 2
.TP
.BI \-D " string
Creates a merged version of
.I file1
and
.I file2
with C preprocessor
controls included so that a compilation of the result without defining
.I string
is equivalent to compiling
.IR file1 ,
while defining
.I string
will yield
.IR file2 .

.br
.ne 2
.TP
.B \-e
Produces a script of only
.BR a ,
.BR c ,
and
.B d
commands for the
editor
.BR ed ,
which will recreate
.I file2
from
.IR file1 .
In
connection with the
.B \-e
option, the following shell program may help
maintain multiple versions of a file. Only an ancestral file ($1) and a chain
of version-to-version
.B ed
scripts ($2,$3,.\|.\|.) made by
.B diff
need be
on hand. A ``latest version'' appears on the standard output.
.sp
.in +2
.nf
(shift; cat $*; echo '1,$p') | ed \(mi $1
.fi
.in -2
.sp


.br
.ne 2
.TP
.B \-f
Produces a similar script, not useful with
.BR ed ,
in the opposite
order.

.br
.ne 2
.TP
.B \-h
Does a fast, half-hearted job. It works only when changed stretches are
short and well separated, but does work on files of unlimited length. Options
.BR \-c ,
.BR \-C ,
.BR \-D ,
.BR \-e ,
.BR \-f ,
.BR \-q ,
.BR \-u ,
and
.B \-n
are
unavailable with
.BR \-h .
.B diff
does not descend into directories with
this option.

.br
.ne 2
.TP
.B \-n
Produces a script similar to
.BR \-e ,
but in the opposite order and with a
count of changed lines on each insert or delete command.

.br
.ne 2
.TP
.B \-q
Just print a single line message when the files differ. 
Does not output a list of changes.

.br
.ne 2
.TP
.B \-u
Produces a listing of differences with three lines of context. The output is
similar to that of the
.B -c
option, except that the context is "unified".
Removed and changed lines in
.I file1
are marked by a
.RB ' \(mi '
while lines added or changed in
.I file2
are marked by a
.RB ' + '.
Both versions of changed lines appear in the output, while added, removed, and
context lines appear only once. The identification of
.I file1
and
.I file2
is different, with "\fB\(mi\(mi\(mi\fR" and "\fB+++\fR" being
printed where "\fB***\fR" and "\fB\(mi\(mi\(mi\fR" would appear with the
.B \-c
option. Each change is separated by a line of the form
.sp
.in +2
.nf
.B @@ \c
.IR -n1 , "n2 \c
.IR +n3 , n4 " @@
.fi
.in -2
.sp


.br
.ne 2
.TP
.BI \-U " number
Produces a listing of differences identical to that produced by
.BR \-u
with
.I number
lines of context.

.LP
The following options are used for comparing directories:
.br
.ne 2
.TP 12n
.B \-l
Produces output in long format. Before the
.BR diff ,
each text file is
piped through
.BR pr (1)
to paginate it. Other differences are remembered
and summarized after all text file differences are reported.

.br
.ne 2
.TP
.B \-r
Applies
.B diff
recursively to common subdirectories encountered.

.br
.ne 2
.TP
.B \-s
Reports files that are identical. These identical files would not otherwise
be mentioned.

.br
.ne 2
.TP
.BI \-S " name
Starts a directory
.B diff
in the middle, beginning with the file
.IR name .

.SH OPERANDS
.sp
.LP
The following operands are supported:
.br
.ne 4
.PD 0
.TP 12n
.I file1
.TP
.I file2
A path name of a file or directory to be compared. If either
.I file1
or
.I file2
is
.BR \(mi ,
the standard input will be used in its place.
.PD

.br
.ne 4
.PD 0
.TP
.I directory1
.TP
.I directory2
A path name of a directory to be compared.
.PD

.sp
.LP
If only one of
.I file1
and
.I file2
is a directory,
.B diff
will
be applied to the non-directory file and the file contained in the directory
file with a filename that is the same as the last component of the
non-directory file.
.SH USAGE
.sp
.LP
See
.BR largefile (5)
for the description of the behavior of
.B diff
when encountering files greater than or equal to 2 Gbyte ( 2^31 bytes).
.SH EXAMPLES
.LP
.B Example 1
Typical output of the diff command
.sp
.LP
In the following command,
.B dir1
is a directory containing a directory
named
.BR x ,
.B dir2
is a directory containing a directory named
.BR x ,
.B dir1/x
and
.B dir2/x
both contain files named
.BR date.out ,
and
.B dir2/x
contains a file named
.BR y :

.sp
.ne 4
.in +2
.nf
example% \c
.B "diff -r dir1 dir2
Common subdirectories: dir1/x and dir2/x

Only in dir2/x: y

diff -r dir1/x/date.out dir2/x/date.out

1c1

< Mon Jul  2 13:12:16 PDT 1990

---

> Tue Jun 19 21:41:39 PDT 1990
.fi
.in -2
.sp

.SH ENVIRONMENT VARIABLES
.sp
.LP
See
.BR environ (5)
for descriptions of the following environment variables
that affect the execution of
.BR diff :
.BR LANG ,
.BR LC_ALL ,
.BR LC_CTYPE ,
.BR LC_MESSAGES ,
.BR LC_TIME ,
and
.BR NLSPATH .
.br
.ne 2
.TP
.B TZ
Determines the locale for affecting the timezone used for calculating file
timestamps written with the
.B \-C
and
.B \-c
options.

.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.br
.ne 2
.TP
.B 0
No differences were found.

.br
.ne 2
.TP
.B 1
Differences were found.

.br
.ne 2
.TP
.B >1
An error occurred.

.SH FILES
.br
.ne 2
.TP 17n
.B /tmp/d?????
temporary file used for comparison

.br
.ne 2
.TP
.B /usr/lib/diffh
executable file for
.B \-h
option

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWesu
_
CSIEnabled
_
Interface StabilityStandard
.TE

.SH SEE ALSO
.nh
.LP
.BR bdiff (1),
.BR cmp (1),
.BR comm (1),
.BR dircmp (1),
.BR ed (1),
.BR patch (1),
.BR pr (1),
.BR sdiff (1),
.BR attributes (5),
.BR environ (5),
.BR largefile (5),
.BR standards (5)
.hy 14
.LP
James W. Hunt
and
M. Douglas McIlroy,
"An Algorithm for Differential File Comparison",
.I Computing Science Technical Report,
Bell Laboratories 41,
June 1976

.SH NOTES
.sp
.LP
Editing scripts produced under the
.B \-f
option are naive
about creating lines consisting of a single period
.RB ( \&. ).
Editing scripts produced under the
.B \-e
option contain a workaround for the problem that is understood by
.BR patch (1).
.sp
.LP
Missing NEWLINE at end of file indicates that the last line of the file in
question did not have a NEWLINE. If the lines are different, they will be
flagged and output, although the output will seem to indicate they are the
same.

.br
.ne 5
.SH AUTHORS
The
.BR diff (1)
program was initially written by Douglas McIlroy at Bell Labs in 1974.
The SVr4 release was written by various authors at AT&T in 1989.
The
.BR diff (1)
programm was later maintained by various people at AT&T and Sun Microsystems.
Since 2006, it
is maintained by J\*org Schilling.

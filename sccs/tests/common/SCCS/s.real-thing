hV6,sum=40737
s 00019/00001/00047
d D 1.4 2019/05/12 13:59:30+0200 joerg 4 3
S s 36060
c TESTING_SCCS_V5 neu und mehr Kommentar
e
s 00002/00003/00046
d D 1.3 2015/06/03 00:16:41+0200 joerg 3 2
S s 51650
c Anpassungen an neue Position im Dateibaum (eine Stufe hoch)
e
s 00030/00008/00019
d D 1.2 2014/08/25 22:17:22+0200 joerg 2 1
S s 50464
c TESTING_SCCS_V6 und mehr Kommentar neu
e
s 00027/00000/00000
d D 1.1 2011/05/28 12:03:27+0200 joerg 1 0
S s 35904
c date and time created 11/05/28 12:03:27 by joerg
e
u
U
f e 0
f y 
G r 0e46e880f71e6
G p sccs/tests/common/real-thing
t
T
I 1
#!/bin/sh

D 3
SRCROOT=`../../../../conf/srcroot.sh`
. ${SRCROOT}/tests/bin/base
E 3
I 3
. ${SRCROOT:=`../../../conf/srcroot.sh`}/tests/bin/base
E 3

D 3
. ../common/command-names
E 3
I 3
. ${SRCROOT}/sccs/tests/common/command-names
E 3

I 4
TESTING_SCCS_V5=false		# Sun SCCS with auto-binary, y2k, ... extensions
E 4
D 2
TESTING_CSSC=false
TESTING_REAL_CSSC=false
TESTING_REAL_SCCS=false
E 2
I 2
TESTING_CSSC=false		# Relict from CSSC tests, also applies to SCCS
TESTING_REAL_CSSC=false		# Don't test real CSSC 4-digit year extensions
D 4
TESTING_REAL_SCCS=false		# Don't test real SCCS 4 digit year extensions
E 4
I 4
TESTING_REAL_SCCS=false		# Don't test Schily SCCS 4 digit year extensions
E 4
TESTING_SCCS_V6=false		# Don't test SCCSv6 features
E 2

I 4
# TESTING_CSSC
# Currently used for:
#	-	whether admin -rxxx works when creating new history files
#	-	whether admin -ycomment works when creating new history files
#	-	whether	admin supports auto-binary mode
#	-	whether admin supports auto-no-newline mode
#	-	whether SCCS is y2k safe

E 4
if ( ${admin} -V 2>&1 ; echo xxx ) 2>/dev/null | grep CSSC >/dev/null
then
D 2
	TESTING_CSSC=true
	TESTING_REAL_CSSC=true
E 2
I 2
	#
	# Found "CSSC" in version string
	#
	TESTING_CSSC=true	# Run CSSC test extensions as well
	TESTING_REAL_CSSC=true	# Run tests for non-compliant CSSC year ext.
E 2
fi

I 4
if ( ${admin} -? 2>&1 ; echo xxx ) 2>/dev/null | grep Usage: >/dev/null
then
	#
	# Found "Usage:" in "$cmd -?" output
	#
	TESTING_SCCS_V5=true	# Run SCCS_V5 test extensions as well
	TESTING_CSSC=true	# Run CSSC test extensions as well
fi

E 4
if ( ${admin} -V 2>&1 ; echo xxx ) 2>/dev/null | grep SCCS >/dev/null
then
I 2
	#
	# Found "SCCS" in version string
	#
E 2
	if test ".$CSSC_ONLY" = ".true"
	then
D 2
		:
E 2
I 2
		:		  # CSSC_ONLY: additional tests only with CSSC
E 2
	else
D 2
		TESTING_CSSC=true
E 2
I 2
		TESTING_CSSC=true # We run additional tests
E 2
	fi
D 2
	TESTING_REAL_SCCS=true
E 2
I 2
	TESTING_REAL_SCCS=true	# Run tests e.g. for SCCS date extensions
E 2
fi
I 2

#
# As the test scripts do not include methods to switch between v4 and v6,
# we here check whether "admin" by default creates SCCSv6 history files.
# This may be caused by an admin program that really creates v6 by default
# or by an admin program that was told to create v6 by adding the environment
# SCCS_V6
#
rm -f s.v6-test
${admin} -n s.v6-test
if head -1 s.v6-test | grep '^hV6,' > /dev/null
then
	TESTING_SCCS_V6=true	# Software supports SCCSv6, so test it
fi
rm -f s.v6-test
E 2
E 1

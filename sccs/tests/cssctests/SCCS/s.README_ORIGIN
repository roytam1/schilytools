hV6,sum=46676
s 00012/00000/00119
d D 1.5 2015/04/26 10:45:42+0200 joerg 5 4
S s 31601
c wtest Funktion neu
e
s 00002/00000/00117
d D 1.4 2014/09/15 22:46:51+0200 joerg 4 3
S s 59071
c get/excl_ig_2.sh SCCSv6 delta -g Bug Warnung neu
e
s 00035/00001/00082
d D 1.3 2014/08/26 22:11:28+0200 joerg 3 2
S s 54182
c Erweiterungen fuer SCCSv6 Tests
e
s 00014/00006/00069
d D 1.2 2014/08/13 00:00:44+0200 joerg 2 1
S s 23447
c Schreibfehler und bessere Beschreibung
e
s 00075/00000/00000
d D 1.1 2011/05/27 18:48:17+0200 joerg 1 0
S s 01884
c date and time created 11/05/27 18:48:17 by joerg
e
u
U
f e 0
G r 0e46e8eb1d354
G p sccs/tests/cssctests/README_ORIGIN
t
T
I 1
The files in this directory (except for the directory "common") are
D 2
taken from the CSSC project. The files below this directory contain mors
that 1100 tests written by James Youngman. We introduced a few modifications:
E 2
I 2
taken from the CSSC project. The files below this directory contain more
that 1100 tests written by James Youngman. We thank James Youngman
for providing this nice test case base that is also very useful for our
official SCCS code.
E 2

I 2
This code has been taken from CSSC-1.3.1, we introduced the following
modifications:

E 2
-	$TESTING_CSSC			was originally set to "true" for
					CSSC and to "false" for other
					software.

					$TESTING_CSSC is now set to "true" by
					our script "common/real-thing" for both
					CSSC and recent generic SCCS (this
					version of SCCS).

					Run the tests with the environment
					variable CSSC_ONLY=true to switch
					back to the original behavior.


-	Test t5 from admin/r-option.sh	tests for something to fail with
					CSSC that is expected to work with SCCS.
					As the CSSC maintainer James Youngman
					now agrees that "admin -i ..." and
					"admin -n ..." are equivalent calls,
					The related action is no longer
					expected to fail even with CSSC.

					Test "t5" has been replaced by "t5a"
					and "t5b" that test for the results
					that are expected when using SCCS.

-	admin/y-flag.sh			This script calles "test -e ..."
					but the -e option to test(1) may not
					be available with the Bourne Shell.
I 2
					For this reason, we replaced "test -e"
					by "test -r"
E 2


-	Test "fa11" from binary/auto.sh	tries to grant that a file with the
					content "x\000y\n" to cause SCCS to
					initialize a history file that is
D 2
					unencoded. This is wrong. Leaving this
E 2
I 2
					un-encoded. This is wrong. Leaving this
E 2
					test as it has been would cause the
					test suite to require the existence
					of a CSSC-specific bug.

					Test "fa11" has been modified to verify
					that an encoded history file is created
					instead.

					A new test "fa12" has been introduced
					that tests whether a fle with the
					content "x\001y\n" will result in an
D 2
					unencoded history file.
E 2
I 2
					un-encoded history file.
E 2

-	binary/seeking.sh		contained a direct call to:
					if ( ${admin} -V 2>&1 ; echo umsp )  | grep CSSC >/dev/null
					instead of testing $TESTING_CSSC

					binary/seeking.sh now checks for
					$TESTING_CSSC to allow the test to be
					run for SCCS too.

-	year-2000/ext.sh		This test used to check for a CSSC
					specific 4-digit cut-off date extension
					that is not implemented with SCCS.

					This test has been enhanced by a test
					for a SCCS specific 4-digit cut-off date
					extension. This new test is now
					enabled by $TESTING_REAL_SCCS, the
					original test is run if
					$TESTING_REAL_CSSC is set.
D 3
					
E 3

I 3
Past 2011, we added the following modifications in August 2014:

-	$TESTING_SCCS_V6		This variable has been added in order
					to deal with different behavior of
					SCCS in case that SCCSv6 history files
					are used.

-	Test c3 in admin/admin-hz.sh	This test intentionally destroys the
					SCCS checsum in line 1 of the history
					file. The original code also destroys
					the V6 header and results in "V3"
					instead of "V6". The new code reverts
					this accidental effect.

-	Text C2 in admin/comment.sh	This tests checks the date/time format
					in the delta table. As the SCCSv6
					history format always uses a 4-digit
					year format, the test needs to check
					a different format whether in v4 or v6
					mode.

-	binary/auto.sh			Several tests are related to auto-uu-
					encoding of files in case that there
					is content that is unsupported by
					SCCSv4. As SCCSv6 treats everything as
					test files as long as there is no NUL
					character present, these tests need
					to be different for SCCSv6 history
					files.

-	binary/seeking.sh		This script contains more corner
					cases for text vs. binary files that
					behave different vor SCCS v4 and v6.

I 4
-	get/excl_ig_2.sh		Warns on a SCCSv6 bug with delta -gsid
I 5
					This has been removed after
					delta -gsid was made working in
					February 2015
E 5
E 4

I 5
We added the following modifications in April 2015:
E 5
I 4

I 5
-	bsd-sccs/driver-basic.sh	The "test -w file" calls have been
	bsd-sccs/sf595594.sh		replaced by "wtest -w file" calls.
	bsd-sccs/delsfile.sh		"wtest" is a shell funtion that
	get/writable.sh			uses ls -l | grep "^-r--r--r--" to
	get/middle-fail.sh		check. Needed as recent Haiku only
					allows to run commands as root.


E 5
E 4
E 3
D 2
If you are interested in the test suite below this directory, please have a look
at the original code from CSSC written by James Youngman.
E 2
I 2
If you are interested in the original version of the test suite below this
directory, please have a look at the original code from CSSC written by
James Youngman.
E 2

E 1

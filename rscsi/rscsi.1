. \" @(#)rscsi.1	1.2 08/10/12 Copyr 2000-2008 J. Schilling
. \"  Manual Seite fuer rscsi
. \"
.if t .ds a \v'-0.55m'\h'0.00n'\z.\h'0.40n'\z.\v'0.55m'\h'-0.40n'a
.if t .ds o \v'-0.55m'\h'0.00n'\z.\h'0.45n'\z.\v'0.55m'\h'-0.45n'o
.if t .ds u \v'-0.55m'\h'0.00n'\z.\h'0.40n'\z.\v'0.55m'\h'-0.40n'u
.if t .ds A \v'-0.77m'\h'0.25n'\z.\h'0.45n'\z.\v'0.77m'\h'-0.70n'A
.if t .ds O \v'-0.77m'\h'0.25n'\z.\h'0.45n'\z.\v'0.77m'\h'-0.70n'O
.if t .ds U \v'-0.77m'\h'0.30n'\z.\h'0.45n'\z.\v'0.77m'\h'-0.75n'U
.if t .ds s \\(*b
.if t .ds S SS
.if n .ds a ae
.if n .ds o oe
.if n .ds u ue
.if n .ds s sz
.TH RSCSI 1 "Release 1.2" "J\*org Schilling" "Schily\'s USER COMMANDS"
.SH NAME
rscsi \- remote generic SCSI transport protocol server
.SH SYNOPSIS
.B /opt/schily/sbin/rscsi

.SH DESCRIPTION
.IX  "rscsi command"  ""  "\fLrscsi\fP \(em remote generic SCSI transport protocol server"
.IX  "remote generic SCSI transport protocol server"  ""  "remote generic SCSI transport protocol server \(em \fLrscsi\fP"
This is the description of the
.B rscsi
remote generic SCSI transport server program.
.B rscsi
is a program used by programs like
.B cdrecord
and
.B sformat
that like to access remote SCSI drives
through an interprocess communication connection.
.B rscsi
is normally started up with an
.BR rexec (3)
or
.BR rcmd (3)
call.
.LP
The
.B rscsi
program accepts 
.BR open ,
.BR close ,
.B sendcmd
and
similar requests that are all related to the interface of 
.BR libscg .
.B rscsi
performs the commands and then responds with a status indication.
.LP
The 
.B rscsi 
program is prepared to be installed as a user shell in the passwd
file to create remote SCSI specific logins and security checking.
.LP
All responses are send back in
.SM ASCII
and in one of the following two forms.
.LP
Successful commands have responses of
.IP
.BI A number\en
.LP
where
.I number
is the
.SM ASCII
representation of a decimal number that usually is the return
code of the corresponding system call.
Unsuccessful commands are responded to with
.IP
.BI E error-number \en error-message \en
.LP
where
.I error-number
is one of the possible error
numbers described in
.BR intro (2),
and
.I error-message
is the corresponding error string as retrieved by
.BR strerror (3).
.LP
.ne 5
The protocol implements the
following commands:
.RS
.TP 15
.BI O device \en mode \en
.TP
.BI O device \en "mode symbolic_mode" \en
Open the specified
.I device
or file using the indicated
.IR mode .
.I device
is a full path name, and
.I mode
is an
.SM ASCII
representation of a decimal
number suitable for being passed as second parameter to
.BR open (2).
A variant of the 
.B open 
command includes the 
.B "symbolic_mode"
string which is a 
.B GNU
extension.
If both,
.I mode
and 
.I symbolic_mode
are present, they are separated by a space character;
.I symbolic_mode
appears on the same line as the numeric mode.
It is send using the same notation as used in a C source (e.g.
.BR O_RDWR|O_CREAT ).
If the
.I symbolic_mode
is send to the server, the numeric
.B mode
is ignored.
The symbolic notation allows to send the expected open mode over
the wire, using a system independent method.
This is needed because different operating systems usually define all
bits in a different way. An exception are the lowest two bits.
The lowest two bits allow to code 
.IR O_RDONLY , O_WRONLY " and " O_RDWR .
To prevent unexpected behavior, 
.B rscsi
masks the numeric open mode with
.B 0x03 
before using it as argument to the 
.BR open (2)
call.
If you need more bits in the second parameter ot
.BR open (2),
you need to use the symbolic mode.
.sp
If no file
.I /etc/default/rscsi
exists, only filenames starting with /dev/ are accepted for security reasons.
.sp
If a device is already open, it is
closed before a new open is performed.
.sp
A
.B RMT protocol VERSION 1 
client should issue a
.br
.BI I -1 \en 0\en
.br
command just after opening a file or device. This is needed to
tell the server that the client is aware of the official order
of the 
.I mt_op
codes in the range 0..7 and that is maps deviating values to the official
ones.
.br
.ne 7
.TP
.BI C device \en
Close the currently open device or file.  The argument
.I device
is ignored.
.br
.ne 7
.TP
.BI R count \en
Read
.I count
bytes of data from the open device or file.
.B rscsi
performs the requested
.BR read (2)
operation and responds with
.BI A count-read\en
if the read operation was
successful; otherwise an error in 
standard format is returned.  If the read operation
was successful, the data read is sent directly after
the response described above.
.br
.ne 7
.TP
.BI W count \en
Write data to the open device or file.
After reading the command specification,
.B rscsi
reads
.I count
bytes from the network connection and aborts if a premature
.SM EOF
is encountered.
The return value from the
.BR write (2)
operation is returned as reply.
.br
.ne 7
.TP
.BI L whence \en offset \en
Perform an
.BR lseek (2)
operation on the open device or file using the specified parameters.
The return value from the
.BR lseek (2)
operation is returned as reply.
.sp
On large file aware operating systems,
.B rscsi
will correctly handle large
.BR lseek (2)
requests.
.br
.ne 7
.TP
.B S
The old non-portable status call.
This call should not be used anymore, it has been replaced by the
new
.B RMT protocol version 1
extended status call below.
If the currently open device is a magnetic tape, return the magnetic tape status,
as obtained with a
.SB MTIOCGET
.B ioctl
call.
If the open device is not a magnetic tape, an error is returned.
If the 
.SB MTIOCGET
operation was successful,
an \*(lqack\*(rq is sent with the size of the
status buffer, then the status buffer is sent.
As the status buffer is sent in binary, this
command it considered outdated. Please use the extended status command instead.
This command is not terminated by a new-line.
.br
.ne 7
.TP
.BI s sub-command
The new portable status call.
This command is part of the
.BR "RMT protocol version 1" .
If the currently open device is a magnetic tape, return a single specified
member of the magnetic tape status structure, as obtained with a
.SB MTIOCGET
.B ioctl
call.
If the open device is not a magnetic tape, an error is returned.
If the 
.SB MTIOCGET
operation was successful, the numerical value of the structure member
is returned in decimal.
The following sub commands are supported:
.RS
.br
.ne 3
.TP
T
return the content of the structure member
.B mt_type
which contains the type of the magnetic tape device.
.br
.ne 3
.TP
D
return the content of the structure member
.B mt_dsreg
which contains the \*(lqdrive status register\*(rq.
.br
.ne 3
.TP
E
return the content of the structure member
.B mt_erreg
which contains the \*(lqerror register\*(rq.
.sp
This structure member must be retrieved first
because it is cleared after each
.SB MTIOCGET
.B ioctl
call.
The 
.B librscsi
will always retrieve the member
.B mt_erreg
first when it is told to retrieve a complete status structure.
.br
.ne 3
.TP
R
return the content of the structure member
.B mt_resid
which contains the residual count of the last I/O.
.br
.ne 3
.TP
F
return the content of the structure member
.B mt_fileno
which contains the block number of the current tape position.
.br
.ne 3
.TP
B
return the content of the structure member
.B mt_blkno
which contains the block number of the current tape position.
.br
.ne 3
.TP
f
return the content of the structure member
.B mt_flags
which contains MTF_ flags from the driver.
.br
.ne 3
.TP
b
return the content of the structure member
.B mt_bf
which contains the optimum blocking factor.
.LP
This command is not terminated with a new-line.
.RE
.br
.ne 7
.TP
.BI I operation \en count \en
Perform a
.SB MTIOCOP
.BR ioctl (2)
command using the specified parameters.
The parameters are interpreted as the
.SM ASCII
representations of the decimal values to place in the
.I mt_op
and
.I mt_count
fields of the structure used in the
.B ioctl
call.  
When the operation is successful the return value is the
.I count
parameter.
Only Opcodes 0..7 are unique across different architectures.
But as in many cases 
.B Linux
does not even follow this rule.
If we know that we have been called by a 
.B RMT protocol VERSION 1 
client, we may safely assume that the client is not using
.B Linux
mapping over the wire but the standard mapping described below:
.RS
.TP
-1
Retrieve the version number of the
.B rscsi
server and tell the server that the client is aware of the official
order of the 
.SB MTIOCOP
.BR ioctl (2)
opcodes in the range 0..7.
Local
.I mt_op
codes must be remapped to the official values before sending them
over the wire.
.sp
The answer of the current version of
.B rscsi
is 1.
Old
.B rscsi
implementations send an error code back when this
command is used.
Future
.B rscsi
implementations with further enhancements will send an answer
with a value > 1.
.TP
0
Issue a
.B MTWEOF
command (write 
.I count
end-of-file records).
.TP
1
Issue a
.B MTFSF
command (forward space over
.I count
file marks).
.TP
2
Issue a
.B MTBSF
command (backward space over
.I count
file marks).
.TP
3
Issue a
.B MTFSR
command (forward space
.I count
inter-record gaps).
.TP
4
Issue a
.B MTBSR
command (backward space 
.I count
inter-record gaps).
.TP
5
Issue a
.B MTREW
command (rewind).
.TP
6
Issue a
.B MTOFFL
command (rewind and put the drive off-line).
.TP
7
Issue a
.B MTNOP
command (no operation, set status only).
.RE
.br
.ne 7
.TP
.BI i operation \en count \en
Perform a
.SB MTIOCOP
.BR ioctl (2)
command using the specified parameters.
This command is a
.B RMT protocol VERSION 1 
extension and implements support for commands beyond MTWEOF..MTNOP (0..7).
The parameters are interpreted as the
.SM ASCII
representations of the decimal values described below.
They are converted into the local values
.I mt_op
and
.I mt_count
fields of the structure used in the
.B ioctl
call according to the actual values found in <sys/mtio.h>.
When the operation is successful the return value is the
.I count
parameter.
.RS
.TP
0
Issue a
.B MTCACHE
command (switch cache on).
.TP
1
Issue a
.B MTNOCACHE
command (switch cache off).
.TP
2
Issue a
.B MTRETEN
command (retension the tape).
.TP
3
Issue a
.B MTERASE
command (erase the entire tape).
.TP
4
Issue a
.B MTEOM
command (position to end of media).
.TP
5
Issue a
.B MTNBSF
command (backward space
.I count
files to BOF).
.RE
.br
.ne 7
.TP
.BI v \en
Return the version of the 
.B rscsi
server. This is currently the decimal number 1.
.RE
.LP
Any other command causes
.B rscsi
to exit.
.SH FILES
.TP
/etc/default/rscsi
Default values can be set for the following options in /etc/default/rscsi.
For example:
.sp
.BR DEBUG= /tmp/rscsi.debug
.br
.BR USER= tape
.br
.BR ACCESS= "tape	myhost.mydomain.org	/dev/rscsi/*"
.sp
All keywords must be on the beginning of a line.
.RS
.TP
.B DEBUG
If you like to get debug information, set this to a file name where 
.B rscsi
should put debug information.
.TP
.B USER
The name of a user (local to the magnetic tape server) that may use
the services of the
.B rscsi
server.
More than one
.BI USER= name
line is possible.
A line
.BR USER= *
grants access to all users.
.TP
.B ACCESS
This keyword is followed by three parameters separated by a TAB.
The name of a user (local to the magnetic tape server host) that may use
the services of the
.B rscsi
server followed by the name of a host from where operation is granted 
and a file specifier pattern for a file or file sub tree that may be accessed
if this 
.B ACCESS
line matches.
More than one
.BI ACCESS= "name host path"
line is possible.
.sp
If standard input of 
.B rscsi
is not a socket from a remote host, 
.B rscsi
will compare the host entry from 
.B /etc/default/rscsi
with the following strings:
.RS
.TP 10
.B PIPE
If 
.B stdin
is a 
.SM UNIX 
pipe.
.sp
If you like to allow remote connections that use the
.B ssh
protocol, you need to use the word
.B PIPE
instead of thr real hostname in the matching
.B ACCESS=
line.
.TP
.B ILLEGAL_SOCKET
If 
.B getpeername()
does not work for
.BR stdin .
.TP
.B NOT_IP
If 
.B getpeername()
works for
.B stdin
but is not connected to an internet socket.
.RE
.RE
.SH "SEE ALSO"
.BR star (1),
.BR ufsdump (1),
.BR ufsrestore (1),
.BR intro (2),
.BR open (2),
.BR close (2),
.BR read (2),
.BR write (2),
.BR ioctl (2),
.BR lseek (2),
.BR getpeername(3)
.BR rcmd (3),
.BR rexec (3),
.BR strerror (3),
.BR mtio (7)

.SH DIAGNOSTICS
All responses are send to the network connection.
They use the form described above.
.SH NOTES
.LP
To use 
.B rscsi
as a remote file access protocol you need to use the symbolic open
modes as e.g. the
.I O_CREAT
flag is not unique between different architectures.
.LP
In order to allow this implementation to be used
as a remote file access protocol,
it accepts file names up to 4096 bytes with the open command.
Other
.B rscsi
implementations allow no more than 64 bytes.
.LP
The possibility to create a debug file by calling
.BI rscsi " file
has been disabled for security reasons.
If you like to debug
.B rscsi
edit
.B /etc/default/rscsi
and insert a 
.B DEBUG
entry.
.LP
This implementation of
.B rscsi
adds some security features to the server that make it behave
slightly different from older implementations.
Read the above documentation about the file 
/etc/default/rscsi
to make sure your local installation is configured for your needs.
.LP
To grant the same permissions as with old
.B rscsi
servers, create a file /etc/default/rscsi and add the following lines
to this file:
.LP
.BR USER= *
.br
.BR ACCESS= "* * *"
.LP
Note that the three fields in the
.B ACCESS=
line need to be separated by a TAB character.
.LP
Be very careful when designing patterns to match path names that may
be accepted for 
.IR open .
If a pattern would allow to include
.I /../
a possible intruder could vitually access any path on your system.
.SH BUGS
.LP
None known.
.SH HISTORY
.LP
The 
.B rscsi
command has been developed by J\*org Schilling in June 2000. 

.SH AUTHOR
.nf
J\*org Schilling
Seestr. 110
D-13353 Berlin
Germany
.fi
.PP
Mail bugs and suggestions to:
.PP
.B
joerg.schilling@fokus.fraunhofer.de
or
.B
js@cs.tu-berlin.de
or
.B
joerg@schily.isdn.cs.tu-berlin.de

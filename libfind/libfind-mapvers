# /* @(#)libfind-mapvers	1.17 19/11/25 Copyright 2005-2019 J. Schilling */

/*
 * Due to a bug in the the C-Preprocessor from SunPro C, we get a syntax
 * error in case there is a word with more than one dot inside.
 * Making it a string helps and seems to be accepted by the UNIX linker.
 * Unfortunately, the GNU linker does not like them, so we run the result
 * through tr -d '"'
 */
"SCHILY_0.9.4" {	# Not yet a stable interface!
global:
	walksname;	# walk.c
} "SCHILY_0.9.3";

"SCHILY_0.9.3" {	# Not yet a stable interface!
global:
	walknlen;	# walk.c
} "SCHILY_0.9.2";

"SCHILY_0.9.2" {	# Not yet a stable interface!
global:
	find_strvers;	# find.c
	find_vers;	# find.c
} "SCHILY_0.9.1";

"SCHILY_0.9.1" {	# Not yet a stable interface!
global:
	find_argsinit;	# find.c moved here to enforce a higher version
	find_parse;	# find.c moved here to enforce a higher version
	find_sqinit;	# find.c
	treewalk;	# walk.c moved here to enforce a higher version
	walkcwd;	# walk.c
} SCHILY_0.9;

SCHILY_0.9 {		# Not yet a stable interface!
global:
#ifdef	__old_compat__
	find_argsinit;	#
	find_parse;	#
#endif
	find_free;	#
} SCHILY_0.2;

SCHILY_0.2 {		# Not yet a stable interface!
global:
	find_hasexec;	# find.c
	find_hasprint;	# find.c
} SCHILY_0.1;

SCHILY_0.1 {		# Not yet a stable interface!
global:
	dfetchdir;	# fetchdir.c
	fetchdir;	# fetchdir.c
	cmpdir;		# cmpdir.c
	sortdir;	# cmpdir.c
	fdircomp;	# cmpdir.c
	find_addprint;	# find.c
#ifdef	__old_compat__
	find_argsinit;	# find.c
	find_free;	# find.c
	find_parse;	# find.c
#endif
	find_expr;	# find.c
	find_firstprim;	# find.c
	find_list;	# find_list.c
	find_main;	# find_main.c
	find_plusflush;	# find.c
	find_pname;	# find.c
	find_primary;	# find.c
	find_printnode;	# find.c
	find_timeinit;	# find.c
	find_tname;	# find.c
	find_token;	# find.c
	find_usage;	# find.c
	has_acl;	# find_misc.c
	has_xattr;	# find_misc.c
#ifdef	__old_compat__
	treewalk;	# walk.c
#endif
	walkopen;	# walk.c
	walkclose;	# walk.c
	walkhome;	# walk.c
	walkgethome;	# walk.c
	walkinitstate;	# walk.c
	ic_gidname;	# idcache.c
	ic_namegid;	# idcache.c
	ic_nameuid;	# idcache.c
	ic_uidname;	# idcache.c
	ic_uid_nobody;	# idcache.c
	ic_gid_nobody;	# idcache.c

local:
	*;
};
